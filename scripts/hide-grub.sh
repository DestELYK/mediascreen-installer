#!/bin/bash

# Source common library
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/lib/common.sh"

<<comment
    This script hides the GRUB menu on boot and configures a quiet boot process.

    The script modifies GRUB configuration to:
    - Set GRUB timeout to 0 (no menu delay)
    - Enable quiet boot with splash screen
    - Reduce kernel log verbosity
    - Hide cursor during boot

    This script requires root privileges. Please run as root.

    Command Line Usage:
        - To hide the GRUB menu:
            sudo ./hide-grub.sh
        - Auto mode:
            sudo ./hide-grub.sh -y

    Author: DestELYK
    Date: 07-09-2024
    Updated: 07-21-2025 - Added common library, improved configuration, and backup functionality
comment

# Initialize common functionality
init_common "hide-grub"

# System checks
check_debian
check_root

# Parse arguments
if ! parse_common_args "$@"; then
    case $? in
        2) exit 0 ;;  # Help was shown
        *) exit 1 ;;  # Parse error
    esac
fi

# Check if GRUB is installed
check_grub_installation() {
    if [[ ! -f /etc/default/grub ]]; then
        log_error "GRUB configuration file not found. Is GRUB installed?"
        return 1
    fi
    
    if ! command -v update-grub >/dev/null 2>&1; then
        log_error "update-grub command not found. GRUB may not be properly installed."
        return 1
    fi
    
    log_debug "GRUB installation verified"
    return 0
}

# Configure GRUB settings
configure_grub() {
    local grub_config="/etc/default/grub"
    
    log_info "Configuring GRUB for hidden menu and quiet boot..."
    
    # Backup existing GRUB configuration
    backup_file "$grub_config" || {
        log_error "Failed to backup GRUB configuration"
        return 1
    }
    
    # Create new GRUB configuration
    cat > "$grub_config" << 'EOF'
# MediaScreen GRUB Configuration
# Generated by hide-grub.sh

# Default boot entry (first entry = 0)
GRUB_DEFAULT=0

# Timeout in seconds (0 = no menu, immediate boot)
GRUB_TIMEOUT=0

# Hide GRUB menu unless shift is held
GRUB_TIMEOUT_STYLE=hidden

# Distribution name
GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`

# Kernel command line parameters for quiet boot
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash loglevel=3 systemd.show_status=auto rd.udev.log_level=3 vt.global_cursor_default=0"

# Additional kernel parameters
GRUB_CMDLINE_LINUX=""

# Disable recovery mode entries
GRUB_DISABLE_RECOVERY="true"

# Terminal configuration
GRUB_TERMINAL=console

# Graphics mode (optional)
#GRUB_GFXMODE=640x480

# Theme (if available)
#GRUB_THEME="/usr/share/grub/themes/theme-name/theme.txt"
EOF
    
    log_info "GRUB configuration updated"
    return 0
}

# Configure quiet boot in GRUB scripts
configure_quiet_boot() {
    local grub_script="/etc/grub.d/10_linux"
    
    if [[ ! -f "$grub_script" ]]; then
        log_warn "GRUB script $grub_script not found, skipping quiet boot configuration"
        return 0
    fi
    
    log_info "Configuring quiet boot in GRUB scripts..."
    
    # Backup the script
    backup_file "$grub_script" || {
        log_warn "Failed to backup GRUB script"
    }
    
    # Enable quiet boot if the setting exists
    if grep -q 'quiet_boot=' "$grub_script"; then
        sed -i 's/quiet_boot="0"/quiet_boot="1"/' "$grub_script"
        log_info "Quiet boot enabled in GRUB script"
    else
        log_debug "Quiet boot setting not found in GRUB script"
    fi
    
    return 0
}

# Update GRUB configuration
update_grub_config() {
    log_info "Updating GRUB configuration..."
    
    if update-grub 2>/dev/null; then
        log_info "GRUB configuration updated successfully"
        return 0
    else
        log_error "Failed to update GRUB configuration"
        return 1
    fi
}

# Verify GRUB configuration
verify_grub_config() {
    local grub_config="/etc/default/grub"
    
    log_info "Verifying GRUB configuration..."
    
    # Check key settings
    if grep -q "GRUB_TIMEOUT=0" "$grub_config"; then
        log_debug "GRUB timeout set to 0"
    else
        log_warn "GRUB timeout not set correctly"
        return 1
    fi
    
    if grep -q "quiet splash" "$grub_config"; then
        log_debug "Quiet splash enabled"
    else
        log_warn "Quiet splash not configured"
    fi
    
    log_info "GRUB configuration verified"
    return 0
}

# Main execution
main() {
    log_info "Starting GRUB configuration for hidden menu and quiet boot..."
    
    # Check GRUB installation
    check_grub_installation || report_failure "GRUB installation check"
    
    if [[ "$AUTO_INSTALL" != "true" ]]; then
        echo
        echo "This script will configure GRUB to:"
        echo "- Hide the boot menu (immediate boot)"
        echo "- Enable quiet boot with minimal output"
        echo "- Set up splash screen"
        echo "- Reduce boot verbosity"
        echo
        
        if ! prompt_yes_no "Continue with GRUB configuration?" "y"; then
            log_info "GRUB configuration cancelled by user"
            exit 0
        fi
    fi
    
    # Configure GRUB
    configure_grub || report_failure "GRUB configuration"
    
    # Configure quiet boot
    configure_quiet_boot || log_warn "Quiet boot configuration had issues"
    
    # Update GRUB
    update_grub_config || report_failure "GRUB update"
    
    # Verify configuration
    verify_grub_config || log_warn "GRUB configuration verification had issues"
    
    report_success "GRUB configuration"
    
    if [[ "$AUTO_INSTALL" != "true" ]]; then
        echo
        echo "GRUB configuration completed successfully!"
        echo "- Boot menu is now hidden (immediate boot)"
        echo "- Quiet boot with splash screen enabled"
        echo "- Reduced boot verbosity configured"
        echo
        echo "Changes will take effect on next reboot."
        echo
        echo "Note: You can still access GRUB menu by holding SHIFT during boot."
        echo
    fi
}

# Run main function
main